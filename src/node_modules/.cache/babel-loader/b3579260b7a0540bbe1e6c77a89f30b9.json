{"ast":null,"code":"var _jsxFileName = \"/home/aashim/weather-app/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nconst API_KEY = \"1bf4aee8b109a62081092033b5e3c8a6\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.city.value;\n      const API_CALL = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n      const data = await API_CALL.json();\n      console.log(data);\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          error: ''\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          error: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Titles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      getWeather: this.getWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      humidity: this.state.humidity,\n      description: this.state.description,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/aashim/weather-app/src/App.js"],"names":["React","Titles","Form","Weather","API_KEY","App","Component","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","API_CALL","fetch","data","json","console","log","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAGA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,WAAW,EAAEC,SADP;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,QAAQ,EAAEH,SAJJ;AAKNI,MAAAA,WAAW,EAAEJ,SALP;AAMNK,MAAAA,KAAK,EAAEL;AAND,KAFuB;;AAAA,SAW/BM,UAX+B,GAWlB,MAAOC,CAAP,IAAa;AAExBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAAvC;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmDZ,IAAK,IAAGC,OAAQ,UAASP,OAAQ,eAAtF,CAA5B;AACA,YAAMmB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACF,UAAGb,IAAI,IAAEC,OAAT,EAAiB;AACf,aAAKgB,QAAL,CAAc;AACZnB,UAAAA,WAAW,EAAEe,IAAI,CAACK,IAAL,CAAUC,IADX;AAEZnB,UAAAA,IAAI,EAAEa,IAAI,CAACO,IAFC;AAGZnB,UAAAA,OAAO,EAAEY,IAAI,CAACQ,GAAL,CAASpB,OAHN;AAIZC,UAAAA,QAAQ,EAAEW,IAAI,CAACK,IAAL,CAAUhB,QAJR;AAKZC,UAAAA,WAAW,EAAEU,IAAI,CAACS,OAAL,CAAa,CAAb,EAAgBnB,WALjB;AAMZC,UAAAA,KAAK,EAAC;AANM,SAAd;AAQD,OATD,MASK;AACH,aAAKa,QAAL,CAAc;AACbnB,UAAAA,WAAW,EAAEC,SADA;AAEbC,UAAAA,IAAI,EAAED,SAFO;AAGbE,UAAAA,OAAO,EAAEF,SAHI;AAIbG,UAAAA,QAAQ,EAAEH,SAJG;AAKbI,UAAAA,WAAW,EAACJ,SALC;AAMbK,UAAAA,KAAK,EAAC;AANO,SAAd;AAQH;AACE,KAvC8B;AAAA;;AAwC/BmB,EAAAA,MAAM,GAAG;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAE,MAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKlB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,OAAD;AACG,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAD3B;AAEG,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFpB;AAGG,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHvB;AAIG,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAJxB;AAKG,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWM,WAL3B;AAMG,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcC;;AAvD8B;;AAwDhC;AAED,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\n\n\nconst API_KEY = \"1bf4aee8b109a62081092033b5e3c8a6\";\n\nclass App extends React.Component{\n\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    error: undefined,\n  }\n\n  getWeather = async (e) => {\n\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.city.value;\n\n    const API_CALL = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await API_CALL.json();\n    console.log(data);\n  if(city&&country){\n    this.setState({\n      temperature: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      humidity: data.main.humidity,\n      description: data.weather[0].description,\n      error:''\n    });\n  }else{\n    this.setState({\n     temperature: undefined,\n     city: undefined,\n     country: undefined,\n     humidity: undefined,\n     description:undefined,\n     error:''\n    });   \n}\n  }\n  render() {\n  return (\n    <div className=\"App\">\n      < Titles />\n      <Form getWeather={this.getWeather} />\n      <Weather \n         temperature={this.state.temperature}\n         city={this.state.city}\n         country={this.state.country}\n         humidity={this.state.humidity}\n         description={this.state.description}\n         error={this.state.error}\n      />\n    </div>\n  );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}